{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport Head from 'next/head';\nimport { Fragment } from 'react';\nimport { MongoClient } from 'mongodb';\nimport MeetUpList from '../components/meetups/MeetupList';\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxs(Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: \"React Meetups\"\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: \"Browse a huge liat of highly active React meetups\"\n      })]\n    }), /*#__PURE__*/_jsx(MeetUpList, {\n      meetups: props.meetups\n    }), \";\"]\n  });\n} // Only run in the server-side never in client\n// export async function getServerSideProps(context){\n//   const req = context.req;\n//   const res = context.res;\n//   // fetch data from an API\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS\n//     }\n//   };\n// }\n// Called before it calls the component function\n// Allowed to be Asynchronous\n\n\nexport async function getStaticProps() {\n  // Code that normally run on a server : file system & database\n  // fetch data from an API\n  const client = await MongoClient.connect(\"mongodb+srv://amihapsari:Amihapsari123@cluster0.wq6iu.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupCollection = db.collection(\"meetups\");\n  const meetups = await meetupCollection.find().toArray();\n  return {\n    props: {\n      // map() -> data need to tranform because of ID not in string type\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    // Pages generated every couple of second -> depend on data changed\n    revalidate: 1\n  };\n}\nexport default HomePage;","map":null,"metadata":{},"sourceType":"module"}