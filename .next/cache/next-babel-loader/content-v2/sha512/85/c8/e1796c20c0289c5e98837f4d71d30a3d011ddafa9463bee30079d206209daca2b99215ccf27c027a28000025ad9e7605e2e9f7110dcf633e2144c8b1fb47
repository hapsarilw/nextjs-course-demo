{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\React_Course\\\\sec23b\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetUpDetail\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  // fetch data from an API\n  const client = await MongoClient.connect(\"mongodb+srv://amihapsari:Amihapsari123@cluster0.wq6iu.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupCollection = db.collection(\"meetups\"); // Only fetch id, without other field\n\n  const meetups = await meetupCollection.find({}, {\n    _id: ObjectId(meetupId)\n  }).toArray();\n  client.close();\n  return {\n    // Your path supported parameter (t/f)\n    // false -> user enter data(m3) -> 404 error\n    // true -> generated page meetupID dynamically\n    // pre generated for spesific meetup -> define path\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch data for a single meetup\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://amihapsari:Amihapsari123@cluster0.wq6iu.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupCollection = db.collection(\"meetups\"); // Only fetch id, without other field\n\n  const selectedMeetups = await meetupCollection.findOne({}, {\n    _id: meetupId\n  }).toArray();\n  client.close();\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: selectedMeetups\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["C:/xampp/htdocs/React_Course/sec23b/pages/[meetupId]/index.js"],"names":["MongoClient","ObjectId","MeetupDetail","MeetupDetails","props","meetupData","image","title","address","description","getStaticPaths","client","connect","db","meetupCollection","collection","meetups","find","_id","meetupId","toArray","close","fallback","paths","map","meetup","params","toString","getStaticProps","context","selectedMeetups","findOne","console","log"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF1B;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH5B;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA,QAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACnB,uGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB,CAPqC,CASrC;;AACA,QAAMC,OAAO,GAAG,MAAMF,gBAAgB,CAACG,IAAjB,CAAsB,EAAtB,EAA0B;AAAEC,IAAAA,GAAG,EAAEjB,QAAQ,CAACkB,QAAD;AAAf,GAA1B,EAAuDC,OAAvD,EAAtB;AAEAT,EAAAA,MAAM,CAACU,KAAP;AAEA,SAAO;AACL;AACA;AACA;AACA;AAEAC,IAAAA,QAAQ,EAAE,KANL;AAOLC,IAAAA,KAAK,EAAEP,OAAO,CAACQ,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAEP,QAAAA,QAAQ,EAAEM,MAAM,CAACP,GAAP,CAAWS,QAAX;AAAZ;AADsB,KAAb,CAAZ;AAPF,GAAP;AAWD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AAEA,QAAMV,QAAQ,GAAGU,OAAO,CAACH,MAAR,CAAeP,QAAhC;AAEA,QAAMR,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACnB,uGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB,CAV4C,CAY5C;;AACA,QAAMe,eAAe,GAAG,MAAMhB,gBAAgB,CAC3CiB,OAD2B,CACnB,EADmB,EACf;AAAEb,IAAAA,GAAG,EAAEC;AAAP,GADe,EAE3BC,OAF2B,EAA9B;AAIAT,EAAAA,MAAM,CAACU,KAAP;AAEAW,EAAAA,OAAO,CAACC,GAAR,CAAYd,QAAZ;AAEA,SAAO;AACLf,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAEyB;AADP;AADF,GAAP;AAKD;AAED,eAAe3B,aAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\r\nimport MeetupDetail from \"../../components/meetups/MeetUpDetail\";\r\n\r\nfunction MeetupDetails(props) {\r\n  return (\r\n    <MeetupDetail\r\n      image={props.meetupData.image}\r\n      title={props.meetupData.title}\r\n      address={props.meetupData.address}\r\n      description={props.meetupData.description}\r\n    />\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  // fetch data from an API\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://amihapsari:Amihapsari123@cluster0.wq6iu.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupCollection = db.collection(\"meetups\");\r\n\r\n  // Only fetch id, without other field\r\n  const meetups = await meetupCollection.find({}, { _id: ObjectId(meetupId) }).toArray();\r\n\r\n  client.close();\r\n\r\n  return {\r\n    // Your path supported parameter (t/f)\r\n    // false -> user enter data(m3) -> 404 error\r\n    // true -> generated page meetupID dynamically\r\n    // pre generated for spesific meetup -> define path\r\n\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  // fetch data for a single meetup\r\n\r\n  const meetupId = context.params.meetupId;\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://amihapsari:Amihapsari123@cluster0.wq6iu.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupCollection = db.collection(\"meetups\");\r\n\r\n  // Only fetch id, without other field\r\n  const selectedMeetups = await meetupCollection\r\n    .findOne({}, { _id: meetupId })\r\n    .toArray();\r\n\r\n  client.close();\r\n\r\n  console.log(meetupId);\r\n\r\n  return {\r\n    props: {\r\n      meetupData: selectedMeetups,\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}