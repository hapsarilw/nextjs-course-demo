{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\React_Course\\\\sec23b\\\\pages\\\\index.js\";\nimport Head from 'next/head';\nimport { Fragment } from 'react';\nimport MeetUpList from '../components/meetups/MeetupList';\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"React Meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(MeetUpList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }, this);\n} // Only run in the server-side never in client\n// export async function getServerSideProps(context){\n//   const req = context.req;\n//   const res = context.res;\n//   // fetch data from an API\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS\n//     }\n//   };\n// }\n// Called before it calls the component function\n// Allowed to be Asynchronous\n\n\n_c = HomePage;\nexport var __N_SSG = true;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["C:/xampp/htdocs/React_Course/sec23b/pages/index.js"],"names":["Head","Fragment","MeetUpList","HomePage","props","meetups"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAGA,OAAOC,UAAP,MAAuB,kCAAvB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,sBACA,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC;AADP;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAUD,C,CAED;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;KA5BSF,Q;;AAyDT,eAAeA,QAAf","sourcesContent":["import Head from 'next/head';\r\nimport { Fragment } from 'react';\r\nimport { MongoClient } from 'mongodb';\r\n\r\nimport MeetUpList from '../components/meetups/MeetupList';\r\n\r\nfunction HomePage(props) {\r\n  return(\r\n  <Fragment>\r\n    <Head>\r\n      <title>React Meetups</title>\r\n      <meta\r\n        name='description'\r\n      />\r\n    </Head>\r\n    <MeetUpList meetups={props.meetups} />;\r\n  </Fragment>);\r\n}\r\n\r\n// Only run in the server-side never in client\r\n// export async function getServerSideProps(context){\r\n//   const req = context.req;\r\n//   const res = context.res;\r\n\r\n//   // fetch data from an API\r\n\r\n//   return {\r\n//     props: {\r\n//       meetups: DUMMY_MEETUPS\r\n//     }\r\n//   };\r\n// }\r\n\r\n// Called before it calls the component function\r\n// Allowed to be Asynchronous\r\n\r\nexport async function getStaticProps() {\r\n  // Code that normally run on a server : file system & database\r\n  // fetch data from an API\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://amihapsari:Amihapsari123@cluster0.wq6iu.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupCollection = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupCollection.find().toArray();\r\n\r\n  return {\r\n    props: {\r\n      // map() -> data need to tranform because of ID not in string type\r\n      meetups: meetups.map((meetup) => ({\r\n        title: meetup.title,\r\n        address: meetup.address,\r\n        image: meetup.image,\r\n        id: meetup._id.toString(),\r\n      })),\r\n    },\r\n    // Pages generated every couple of second -> depend on data changed\r\n    revalidate: 1,\r\n  };\r\n}\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}